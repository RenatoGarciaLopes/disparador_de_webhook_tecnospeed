services:
  app:
    container_name: disparador-wh
    depends_on:
      - db
      - redis
    build:
      context: .
      dockerfile: Dockerfile.${NODE_ENV:-development}
    ports:
      - ${PORT}:${PORT}
    env_file: .env
    networks:
      - disparador-wh-network
    volumes:
      - .:/app:cached

  db:
    container_name: disparador-wh-db
    image: postgres:17
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT_HOST=${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - disparador-wh-network

  redis:
    container_name: disparador-wh-redis
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    env_file: .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redisdata:/data
    networks:
      - disparador-wh-network

networks:
  disparador-wh-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
  redisdata:
